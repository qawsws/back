/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.40
 * Generated at: 2025-06-09 07:39:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import member.dto.MemberDTO;

public final class Header_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("member.dto.MemberDTO");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<header id=\"header\">\r\n");
      out.write("		<div class=\"header_area box_inner clear\">	\r\n");
      out.write("			<h1><a href=\"./\">Tourist in tour</a></h1>\r\n");
      out.write("			<p class=\"openMOgnb\"><a href=\"#\"><b class=\"hdd\">메뉴열기</b> <span></span><span></span><span></span></a></p>\r\n");
      out.write("			<!-- header_cont -->\r\n");
      out.write("			<div class=\"header_cont\">\r\n");
      out.write("				<ul class=\"util clear\">\r\n");
      out.write("					");
if(session.getAttribute("userDTO")!=null){ 
      out.write("\r\n");
      out.write("					<li>\r\n");
      out.write("						<span style=\"color:white;\">\r\n");
      out.write("						");
      out.print(((MemberDTO)session.getAttribute("userDTO")).getName() );
      out.write("님 환영합니다.\r\n");
      out.write("						</span>\r\n");
      out.write("					</li>\r\n");
      out.write("					");
} 
      out.write("\r\n");
      out.write("					<li>\r\n");
      out.write("						");
if(session.getAttribute("userDTO")==null){ 
      out.write("\r\n");
      out.write("							<a href=\"./login.do\">로그인</a>\r\n");
      out.write("						");
}else{ 
      out.write("\r\n");
      out.write("							<a href=\"./logout.do\">로그아웃</a>\r\n");
      out.write("						");
} 
      out.write("\r\n");
      out.write("					</li>\r\n");
      out.write("					<li><a href=\"./join.do\">회원가입</a></li>\r\n");
      out.write("				</ul>		\r\n");
      out.write("				<nav>\r\n");
      out.write("				<ul class=\"gnb clear\">\r\n");
      out.write("					<li><a href=\"javascript:;\" class=\"openAll1\">여행정보</a>\r\n");
      out.write("\r\n");
      out.write("                        <div class=\"gnb_depth gnb_depth2_1\">\r\n");
      out.write("                            <ul class=\"submenu_list\">\r\n");
      out.write("                                <li><a href=\"javascript:;\">국내</a></li>\r\n");
      out.write("                                <li><a href=\"javascript:;\">해외</a></li>\r\n");
      out.write("                            </ul>\r\n");
      out.write("                        </div>\r\n");
      out.write("					</li>\r\n");
      out.write("					<li><a href=\"javascript:;\" class=\"openAll2\">고객센터</a>\r\n");
      out.write("				        <div class=\"gnb_depth gnb_depth2_2\">\r\n");
      out.write("                            <ul class=\"submenu_list\">\r\n");
      out.write("                                <li><a href=\"./boardlist.do\">공지사항</a></li>\r\n");
      out.write("                                <li><a href=\"javascript:;\">문의하기</a></li>\r\n");
      out.write("                            </ul>\r\n");
      out.write("                        </div>\r\n");
      out.write("					</li>\r\n");
      out.write("					<li><a href=\"javascript:;\" class=\"openAll3\">상품투어</a>\r\n");
      out.write("                        <div class=\"gnb_depth gnb_depth2_3\">\r\n");
      out.write("                            <ul class=\"submenu_list\">\r\n");
      out.write("                                <li><a href=\"/program.do\">프로그램 소개</a></li>\r\n");
      out.write("                                <li><a href=\"javascript:;\">여행자료</a></li>\r\n");
      out.write("                            </ul>\r\n");
      out.write("                        </div>\r\n");
      out.write("					</li>\r\n");
      out.write("					<li><a href=\"javascript:;\" class=\"openAll4\">티켓/가이드</a>\r\n");
      out.write("                        <div class=\"gnb_depth gnb_depth2_4\">\r\n");
      out.write("                            <ul class=\"submenu_list\">\r\n");
      out.write("                                <li><a href=\"javascript:;\">항공</a></li>\r\n");
      out.write("                                <li><a href=\"javascript:;\">호텔</a></li>\r\n");
      out.write("                            </ul>\r\n");
      out.write("                        </div>\r\n");
      out.write("					</li>\r\n");
      out.write("				</ul>\r\n");
      out.write("                </nav>\r\n");
      out.write("				<p class=\"closePop\"><a href=\"javascript:;\">닫기</a></p>\r\n");
      out.write("			</div>\r\n");
      out.write("			<!-- //header_cont -->\r\n");
      out.write("		</div>\r\n");
      out.write("	</header>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
